<?php
namespace Tests\Unit\Domain\Team\Repository;

use App\Domain\Team\Entity\Team;
use App\Domain\Team\Enums\CurrentFormEnum;
use App\Domain\Team\Repository\TeamRepository;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Tests\TestCase;

class TeamRepositoryTest extends TestCase
{
    private TeamRepository $teamRepository;

    protected function setUp(): void
    {
        $this->teamRepository = app()->make(TeamRepository::class);
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testGetAllTeams()
    {
        Team::factory()->count(4)->create();
        $result = $this->teamRepository->getAllTeams();
        $this->assertCount(4, $result);
    }

    public function testGetTeamById()
    {
        $teams = Team::factory()->count(4)->create();
        $team = $this->teamRepository->getTeamById($teams[0]->id);
        $this->assertEquals($teams[0]->name, $team->name);

        $this->expectException(ModelNotFoundException::class);
        $this->teamRepository->getTeamById(99999);
    }

    public function testUpdateCurrentForm()
    {
        $team = Team::factory()->create([
            'current_form' => CurrentFormEnum::Good
        ]);

        $team = $this->teamRepository->updateCurrentForm($team, CurrentFormEnum::Bad->value);
        $this->assertEquals(CurrentFormEnum::Bad->value, $team->current_form);

        $team = $this->teamRepository->updateCurrentForm($team, CurrentFormEnum::Best->value);
        $this->assertEquals(CurrentFormEnum::Best->value, $team->current_form);
    }
}
